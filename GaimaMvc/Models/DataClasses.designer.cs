#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GaimaMvc.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbGaima")]
	public partial class DataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttbGame(tbGame instance);
    partial void UpdatetbGame(tbGame instance);
    partial void DeletetbGame(tbGame instance);
    partial void InserttbUser(tbUser instance);
    partial void UpdatetbUser(tbUser instance);
    partial void DeletetbUser(tbUser instance);
    partial void InserttbGameGenre(tbGameGenre instance);
    partial void UpdatetbGameGenre(tbGameGenre instance);
    partial void DeletetbGameGenre(tbGameGenre instance);
    partial void InserttbGameGraphicStyle(tbGameGraphicStyle instance);
    partial void UpdatetbGameGraphicStyle(tbGameGraphicStyle instance);
    partial void DeletetbGameGraphicStyle(tbGameGraphicStyle instance);
    partial void InserttbGamePlatform(tbGamePlatform instance);
    partial void UpdatetbGamePlatform(tbGamePlatform instance);
    partial void DeletetbGamePlatform(tbGamePlatform instance);
    partial void InserttbGameScore(tbGameScore instance);
    partial void UpdatetbGameScore(tbGameScore instance);
    partial void DeletetbGameScore(tbGameScore instance);
    partial void InserttbGameTheme(tbGameTheme instance);
    partial void UpdatetbGameTheme(tbGameTheme instance);
    partial void DeletetbGameTheme(tbGameTheme instance);
    partial void InserttbGenre(tbGenre instance);
    partial void UpdatetbGenre(tbGenre instance);
    partial void DeletetbGenre(tbGenre instance);
    partial void InserttbGraphicStyle(tbGraphicStyle instance);
    partial void UpdatetbGraphicStyle(tbGraphicStyle instance);
    partial void DeletetbGraphicStyle(tbGraphicStyle instance);
    partial void InserttbParameter(tbParameter instance);
    partial void UpdatetbParameter(tbParameter instance);
    partial void DeletetbParameter(tbParameter instance);
    partial void InserttbPlatform(tbPlatform instance);
    partial void UpdatetbPlatform(tbPlatform instance);
    partial void DeletetbPlatform(tbPlatform instance);
    partial void InserttbPreference(tbPreference instance);
    partial void UpdatetbPreference(tbPreference instance);
    partial void DeletetbPreference(tbPreference instance);
    partial void InserttbPreferenceGenre(tbPreferenceGenre instance);
    partial void UpdatetbPreferenceGenre(tbPreferenceGenre instance);
    partial void DeletetbPreferenceGenre(tbPreferenceGenre instance);
    partial void InserttbPreferenceGraphicStyle(tbPreferenceGraphicStyle instance);
    partial void UpdatetbPreferenceGraphicStyle(tbPreferenceGraphicStyle instance);
    partial void DeletetbPreferenceGraphicStyle(tbPreferenceGraphicStyle instance);
    partial void InserttbPreferencePlatform(tbPreferencePlatform instance);
    partial void UpdatetbPreferencePlatform(tbPreferencePlatform instance);
    partial void DeletetbPreferencePlatform(tbPreferencePlatform instance);
    partial void InserttbPreferenceTheme(tbPreferenceTheme instance);
    partial void UpdatetbPreferenceTheme(tbPreferenceTheme instance);
    partial void DeletetbPreferenceTheme(tbPreferenceTheme instance);
    partial void InserttbTemplate(tbTemplate instance);
    partial void UpdatetbTemplate(tbTemplate instance);
    partial void DeletetbTemplate(tbTemplate instance);
    partial void InserttbTheme(tbTheme instance);
    partial void UpdatetbTheme(tbTheme instance);
    partial void DeletetbTheme(tbTheme instance);
    partial void InserttbImage(tbImage instance);
    partial void UpdatetbImage(tbImage instance);
    partial void DeletetbImage(tbImage instance);
    #endregion
		
		public DataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbGaimaConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbGame> tbGames
		{
			get
			{
				return this.GetTable<tbGame>();
			}
		}
		
		public System.Data.Linq.Table<tbUser> tbUsers
		{
			get
			{
				return this.GetTable<tbUser>();
			}
		}
		
		public System.Data.Linq.Table<tbGameGenre> tbGameGenres
		{
			get
			{
				return this.GetTable<tbGameGenre>();
			}
		}
		
		public System.Data.Linq.Table<tbGameGraphicStyle> tbGameGraphicStyles
		{
			get
			{
				return this.GetTable<tbGameGraphicStyle>();
			}
		}
		
		public System.Data.Linq.Table<tbGamePlatform> tbGamePlatforms
		{
			get
			{
				return this.GetTable<tbGamePlatform>();
			}
		}
		
		public System.Data.Linq.Table<tbGameScore> tbGameScores
		{
			get
			{
				return this.GetTable<tbGameScore>();
			}
		}
		
		public System.Data.Linq.Table<tbGameTheme> tbGameThemes
		{
			get
			{
				return this.GetTable<tbGameTheme>();
			}
		}
		
		public System.Data.Linq.Table<tbGenre> tbGenres
		{
			get
			{
				return this.GetTable<tbGenre>();
			}
		}
		
		public System.Data.Linq.Table<tbGraphicStyle> tbGraphicStyles
		{
			get
			{
				return this.GetTable<tbGraphicStyle>();
			}
		}
		
		public System.Data.Linq.Table<tbParameter> tbParameters
		{
			get
			{
				return this.GetTable<tbParameter>();
			}
		}
		
		public System.Data.Linq.Table<tbPlatform> tbPlatforms
		{
			get
			{
				return this.GetTable<tbPlatform>();
			}
		}
		
		public System.Data.Linq.Table<tbPreference> tbPreferences
		{
			get
			{
				return this.GetTable<tbPreference>();
			}
		}
		
		public System.Data.Linq.Table<tbPreferenceGenre> tbPreferenceGenres
		{
			get
			{
				return this.GetTable<tbPreferenceGenre>();
			}
		}
		
		public System.Data.Linq.Table<tbPreferenceGraphicStyle> tbPreferenceGraphicStyles
		{
			get
			{
				return this.GetTable<tbPreferenceGraphicStyle>();
			}
		}
		
		public System.Data.Linq.Table<tbPreferencePlatform> tbPreferencePlatforms
		{
			get
			{
				return this.GetTable<tbPreferencePlatform>();
			}
		}
		
		public System.Data.Linq.Table<tbPreferenceTheme> tbPreferenceThemes
		{
			get
			{
				return this.GetTable<tbPreferenceTheme>();
			}
		}
		
		public System.Data.Linq.Table<tbTemplate> tbTemplates
		{
			get
			{
				return this.GetTable<tbTemplate>();
			}
		}
		
		public System.Data.Linq.Table<tbTheme> tbThemes
		{
			get
			{
				return this.GetTable<tbTheme>();
			}
		}
		
		public System.Data.Linq.Table<vwGenre> vwGenres
		{
			get
			{
				return this.GetTable<vwGenre>();
			}
		}
		
		public System.Data.Linq.Table<vwTheme> vwThemes
		{
			get
			{
				return this.GetTable<vwTheme>();
			}
		}
		
		public System.Data.Linq.Table<vwGraphicStyle> vwGraphicStyles
		{
			get
			{
				return this.GetTable<vwGraphicStyle>();
			}
		}
		
		public System.Data.Linq.Table<vwPlatform> vwPlatforms
		{
			get
			{
				return this.GetTable<vwPlatform>();
			}
		}
		
		public System.Data.Linq.Table<vwScore> vwScores
		{
			get
			{
				return this.GetTable<vwScore>();
			}
		}
		
		public System.Data.Linq.Table<tbImage> tbImages
		{
			get
			{
				return this.GetTable<tbImage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGame")]
	public partial class tbGame : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sTitle;
		
		private string _sDescription;
		
		private EntitySet<tbGameGenre> _tbGameGenres;
		
		private EntitySet<tbGameGraphicStyle> _tbGameGraphicStyles;
		
		private EntitySet<tbGamePlatform> _tbGamePlatforms;
		
		private EntitySet<tbGameScore> _tbGameScores;
		
		private EntitySet<tbGameTheme> _tbGameThemes;
		
		private EntitySet<tbImage> _tbImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsTitleChanging(string value);
    partial void OnsTitleChanged();
    partial void OnsDescriptionChanging(string value);
    partial void OnsDescriptionChanged();
    #endregion
		
		public tbGame()
		{
			this._tbGameGenres = new EntitySet<tbGameGenre>(new Action<tbGameGenre>(this.attach_tbGameGenres), new Action<tbGameGenre>(this.detach_tbGameGenres));
			this._tbGameGraphicStyles = new EntitySet<tbGameGraphicStyle>(new Action<tbGameGraphicStyle>(this.attach_tbGameGraphicStyles), new Action<tbGameGraphicStyle>(this.detach_tbGameGraphicStyles));
			this._tbGamePlatforms = new EntitySet<tbGamePlatform>(new Action<tbGamePlatform>(this.attach_tbGamePlatforms), new Action<tbGamePlatform>(this.detach_tbGamePlatforms));
			this._tbGameScores = new EntitySet<tbGameScore>(new Action<tbGameScore>(this.attach_tbGameScores), new Action<tbGameScore>(this.detach_tbGameScores));
			this._tbGameThemes = new EntitySet<tbGameTheme>(new Action<tbGameTheme>(this.attach_tbGameThemes), new Action<tbGameTheme>(this.detach_tbGameThemes));
			this._tbImages = new EntitySet<tbImage>(new Action<tbImage>(this.attach_tbImages), new Action<tbImage>(this.detach_tbImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sTitle", DbType="NVarChar(100)")]
		public string sTitle
		{
			get
			{
				return this._sTitle;
			}
			set
			{
				if ((this._sTitle != value))
				{
					this.OnsTitleChanging(value);
					this.SendPropertyChanging();
					this._sTitle = value;
					this.SendPropertyChanged("sTitle");
					this.OnsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sDescription", DbType="NVarChar(3000)")]
		public string sDescription
		{
			get
			{
				return this._sDescription;
			}
			set
			{
				if ((this._sDescription != value))
				{
					this.OnsDescriptionChanging(value);
					this.SendPropertyChanging();
					this._sDescription = value;
					this.SendPropertyChanged("sDescription");
					this.OnsDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameGenre", Storage="_tbGameGenres", ThisKey="Id", OtherKey="iGame")]
		public EntitySet<tbGameGenre> tbGameGenres
		{
			get
			{
				return this._tbGameGenres;
			}
			set
			{
				this._tbGameGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameGraphicStyle", Storage="_tbGameGraphicStyles", ThisKey="Id", OtherKey="iGame")]
		public EntitySet<tbGameGraphicStyle> tbGameGraphicStyles
		{
			get
			{
				return this._tbGameGraphicStyles;
			}
			set
			{
				this._tbGameGraphicStyles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGamePlatform", Storage="_tbGamePlatforms", ThisKey="Id", OtherKey="iGame")]
		public EntitySet<tbGamePlatform> tbGamePlatforms
		{
			get
			{
				return this._tbGamePlatforms;
			}
			set
			{
				this._tbGamePlatforms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameScore", Storage="_tbGameScores", ThisKey="Id", OtherKey="iGame")]
		public EntitySet<tbGameScore> tbGameScores
		{
			get
			{
				return this._tbGameScores;
			}
			set
			{
				this._tbGameScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameTheme", Storage="_tbGameThemes", ThisKey="Id", OtherKey="iGame")]
		public EntitySet<tbGameTheme> tbGameThemes
		{
			get
			{
				return this._tbGameThemes;
			}
			set
			{
				this._tbGameThemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbImage", Storage="_tbImages", ThisKey="Id", OtherKey="iGame")]
		public EntitySet<tbImage> tbImages
		{
			get
			{
				return this._tbImages;
			}
			set
			{
				this._tbImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGameGenres(tbGameGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = this;
		}
		
		private void detach_tbGameGenres(tbGameGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = null;
		}
		
		private void attach_tbGameGraphicStyles(tbGameGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = this;
		}
		
		private void detach_tbGameGraphicStyles(tbGameGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = null;
		}
		
		private void attach_tbGamePlatforms(tbGamePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = this;
		}
		
		private void detach_tbGamePlatforms(tbGamePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = null;
		}
		
		private void attach_tbGameScores(tbGameScore entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = this;
		}
		
		private void detach_tbGameScores(tbGameScore entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = null;
		}
		
		private void attach_tbGameThemes(tbGameTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = this;
		}
		
		private void detach_tbGameThemes(tbGameTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = null;
		}
		
		private void attach_tbImages(tbImage entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = this;
		}
		
		private void detach_tbImages(tbImage entity)
		{
			this.SendPropertyChanging();
			entity.tbGame = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbUser")]
	public partial class tbUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sUserName;
		
		private string _sUserPassWord;
		
		private EntitySet<tbGameScore> _tbGameScores;
		
		private EntitySet<tbTemplate> _tbTemplates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsUserNameChanging(string value);
    partial void OnsUserNameChanged();
    partial void OnsUserPassWordChanging(string value);
    partial void OnsUserPassWordChanged();
    #endregion
		
		public tbUser()
		{
			this._tbGameScores = new EntitySet<tbGameScore>(new Action<tbGameScore>(this.attach_tbGameScores), new Action<tbGameScore>(this.detach_tbGameScores));
			this._tbTemplates = new EntitySet<tbTemplate>(new Action<tbTemplate>(this.attach_tbTemplates), new Action<tbTemplate>(this.detach_tbTemplates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserName", DbType="NVarChar(20)")]
		public string sUserName
		{
			get
			{
				return this._sUserName;
			}
			set
			{
				if ((this._sUserName != value))
				{
					this.OnsUserNameChanging(value);
					this.SendPropertyChanging();
					this._sUserName = value;
					this.SendPropertyChanged("sUserName");
					this.OnsUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sUserPassWord", DbType="NVarChar(50)")]
		public string sUserPassWord
		{
			get
			{
				return this._sUserPassWord;
			}
			set
			{
				if ((this._sUserPassWord != value))
				{
					this.OnsUserPassWordChanging(value);
					this.SendPropertyChanging();
					this._sUserPassWord = value;
					this.SendPropertyChanged("sUserPassWord");
					this.OnsUserPassWordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbGameScore", Storage="_tbGameScores", ThisKey="Id", OtherKey="iUser")]
		public EntitySet<tbGameScore> tbGameScores
		{
			get
			{
				return this._tbGameScores;
			}
			set
			{
				this._tbGameScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTemplate", Storage="_tbTemplates", ThisKey="Id", OtherKey="iUser")]
		public EntitySet<tbTemplate> tbTemplates
		{
			get
			{
				return this._tbTemplates;
			}
			set
			{
				this._tbTemplates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGameScores(tbGameScore entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbGameScores(tbGameScore entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
		
		private void attach_tbTemplates(tbTemplate entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = this;
		}
		
		private void detach_tbTemplates(tbTemplate entity)
		{
			this.SendPropertyChanging();
			entity.tbUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGameGenre")]
	public partial class tbGameGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iGame;
		
		private int _iGenre;
		
		private EntityRef<tbGame> _tbGame;
		
		private EntityRef<tbGenre> _tbGenre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniGameChanging(int value);
    partial void OniGameChanged();
    partial void OniGenreChanging(int value);
    partial void OniGenreChanged();
    #endregion
		
		public tbGameGenre()
		{
			this._tbGame = default(EntityRef<tbGame>);
			this._tbGenre = default(EntityRef<tbGenre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					if (this._tbGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGameChanging(value);
					this.SendPropertyChanging();
					this._iGame = value;
					this.SendPropertyChanged("iGame");
					this.OniGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGenre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGenre
		{
			get
			{
				return this._iGenre;
			}
			set
			{
				if ((this._iGenre != value))
				{
					if (this._tbGenre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGenreChanging(value);
					this.SendPropertyChanging();
					this._iGenre = value;
					this.SendPropertyChanged("iGenre");
					this.OniGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameGenre", Storage="_tbGame", ThisKey="iGame", OtherKey="Id", IsForeignKey=true)]
		public tbGame tbGame
		{
			get
			{
				return this._tbGame.Entity;
			}
			set
			{
				tbGame previousValue = this._tbGame.Entity;
				if (((previousValue != value) 
							|| (this._tbGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGame.Entity = null;
						previousValue.tbGameGenres.Remove(this);
					}
					this._tbGame.Entity = value;
					if ((value != null))
					{
						value.tbGameGenres.Add(this);
						this._iGame = value.Id;
					}
					else
					{
						this._iGame = default(int);
					}
					this.SendPropertyChanged("tbGame");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGenre_tbGameGenre", Storage="_tbGenre", ThisKey="iGenre", OtherKey="Id", IsForeignKey=true)]
		public tbGenre tbGenre
		{
			get
			{
				return this._tbGenre.Entity;
			}
			set
			{
				tbGenre previousValue = this._tbGenre.Entity;
				if (((previousValue != value) 
							|| (this._tbGenre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGenre.Entity = null;
						previousValue.tbGameGenres.Remove(this);
					}
					this._tbGenre.Entity = value;
					if ((value != null))
					{
						value.tbGameGenres.Add(this);
						this._iGenre = value.Id;
					}
					else
					{
						this._iGenre = default(int);
					}
					this.SendPropertyChanged("tbGenre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGameGraphicStyle")]
	public partial class tbGameGraphicStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iGame;
		
		private int _iGraphicStyle;
		
		private EntityRef<tbGame> _tbGame;
		
		private EntityRef<tbGraphicStyle> _tbGraphicStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniGameChanging(int value);
    partial void OniGameChanged();
    partial void OniGraphicStyleChanging(int value);
    partial void OniGraphicStyleChanged();
    #endregion
		
		public tbGameGraphicStyle()
		{
			this._tbGame = default(EntityRef<tbGame>);
			this._tbGraphicStyle = default(EntityRef<tbGraphicStyle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					if (this._tbGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGameChanging(value);
					this.SendPropertyChanging();
					this._iGame = value;
					this.SendPropertyChanged("iGame");
					this.OniGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGraphicStyle", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGraphicStyle
		{
			get
			{
				return this._iGraphicStyle;
			}
			set
			{
				if ((this._iGraphicStyle != value))
				{
					if (this._tbGraphicStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGraphicStyleChanging(value);
					this.SendPropertyChanging();
					this._iGraphicStyle = value;
					this.SendPropertyChanged("iGraphicStyle");
					this.OniGraphicStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameGraphicStyle", Storage="_tbGame", ThisKey="iGame", OtherKey="Id", IsForeignKey=true)]
		public tbGame tbGame
		{
			get
			{
				return this._tbGame.Entity;
			}
			set
			{
				tbGame previousValue = this._tbGame.Entity;
				if (((previousValue != value) 
							|| (this._tbGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGame.Entity = null;
						previousValue.tbGameGraphicStyles.Remove(this);
					}
					this._tbGame.Entity = value;
					if ((value != null))
					{
						value.tbGameGraphicStyles.Add(this);
						this._iGame = value.Id;
					}
					else
					{
						this._iGame = default(int);
					}
					this.SendPropertyChanged("tbGame");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGraphicStyle_tbGameGraphicStyle", Storage="_tbGraphicStyle", ThisKey="iGraphicStyle", OtherKey="Id", IsForeignKey=true)]
		public tbGraphicStyle tbGraphicStyle
		{
			get
			{
				return this._tbGraphicStyle.Entity;
			}
			set
			{
				tbGraphicStyle previousValue = this._tbGraphicStyle.Entity;
				if (((previousValue != value) 
							|| (this._tbGraphicStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGraphicStyle.Entity = null;
						previousValue.tbGameGraphicStyles.Remove(this);
					}
					this._tbGraphicStyle.Entity = value;
					if ((value != null))
					{
						value.tbGameGraphicStyles.Add(this);
						this._iGraphicStyle = value.Id;
					}
					else
					{
						this._iGraphicStyle = default(int);
					}
					this.SendPropertyChanged("tbGraphicStyle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGamePlatform")]
	public partial class tbGamePlatform : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iGame;
		
		private int _iPlatform;
		
		private EntityRef<tbGame> _tbGame;
		
		private EntityRef<tbPlatform> _tbPlatform;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniGameChanging(int value);
    partial void OniGameChanged();
    partial void OniPlatformChanging(int value);
    partial void OniPlatformChanged();
    #endregion
		
		public tbGamePlatform()
		{
			this._tbGame = default(EntityRef<tbGame>);
			this._tbPlatform = default(EntityRef<tbPlatform>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					if (this._tbGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGameChanging(value);
					this.SendPropertyChanging();
					this._iGame = value;
					this.SendPropertyChanged("iGame");
					this.OniGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPlatform", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iPlatform
		{
			get
			{
				return this._iPlatform;
			}
			set
			{
				if ((this._iPlatform != value))
				{
					if (this._tbPlatform.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPlatformChanging(value);
					this.SendPropertyChanging();
					this._iPlatform = value;
					this.SendPropertyChanged("iPlatform");
					this.OniPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGamePlatform", Storage="_tbGame", ThisKey="iGame", OtherKey="Id", IsForeignKey=true)]
		public tbGame tbGame
		{
			get
			{
				return this._tbGame.Entity;
			}
			set
			{
				tbGame previousValue = this._tbGame.Entity;
				if (((previousValue != value) 
							|| (this._tbGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGame.Entity = null;
						previousValue.tbGamePlatforms.Remove(this);
					}
					this._tbGame.Entity = value;
					if ((value != null))
					{
						value.tbGamePlatforms.Add(this);
						this._iGame = value.Id;
					}
					else
					{
						this._iGame = default(int);
					}
					this.SendPropertyChanged("tbGame");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPlatform_tbGamePlatform", Storage="_tbPlatform", ThisKey="iPlatform", OtherKey="Id", IsForeignKey=true)]
		public tbPlatform tbPlatform
		{
			get
			{
				return this._tbPlatform.Entity;
			}
			set
			{
				tbPlatform previousValue = this._tbPlatform.Entity;
				if (((previousValue != value) 
							|| (this._tbPlatform.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPlatform.Entity = null;
						previousValue.tbGamePlatforms.Remove(this);
					}
					this._tbPlatform.Entity = value;
					if ((value != null))
					{
						value.tbGamePlatforms.Add(this);
						this._iPlatform = value.Id;
					}
					else
					{
						this._iPlatform = default(int);
					}
					this.SendPropertyChanged("tbPlatform");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGameScore")]
	public partial class tbGameScore : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _iUser;
		
		private System.Nullable<int> _iGame;
		
		private System.Nullable<int> _iParameters;
		
		private EntityRef<tbGame> _tbGame;
		
		private EntityRef<tbUser> _tbUser;
		
		private EntityRef<tbParameter> _tbParameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OniUserChanging(System.Nullable<int> value);
    partial void OniUserChanged();
    partial void OniGameChanging(System.Nullable<int> value);
    partial void OniGameChanged();
    partial void OniParametersChanging(System.Nullable<int> value);
    partial void OniParametersChanged();
    #endregion
		
		public tbGameScore()
		{
			this._tbGame = default(EntityRef<tbGame>);
			this._tbUser = default(EntityRef<tbUser>);
			this._tbParameter = default(EntityRef<tbParameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUser", DbType="Int")]
		public System.Nullable<int> iUser
		{
			get
			{
				return this._iUser;
			}
			set
			{
				if ((this._iUser != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniUserChanging(value);
					this.SendPropertyChanging();
					this._iUser = value;
					this.SendPropertyChanged("iUser");
					this.OniUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int")]
		public System.Nullable<int> iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					if (this._tbGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGameChanging(value);
					this.SendPropertyChanging();
					this._iGame = value;
					this.SendPropertyChanged("iGame");
					this.OniGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iParameters", DbType="Int")]
		public System.Nullable<int> iParameters
		{
			get
			{
				return this._iParameters;
			}
			set
			{
				if ((this._iParameters != value))
				{
					if (this._tbParameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniParametersChanging(value);
					this.SendPropertyChanging();
					this._iParameters = value;
					this.SendPropertyChanged("iParameters");
					this.OniParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameScore", Storage="_tbGame", ThisKey="iGame", OtherKey="Id", IsForeignKey=true)]
		public tbGame tbGame
		{
			get
			{
				return this._tbGame.Entity;
			}
			set
			{
				tbGame previousValue = this._tbGame.Entity;
				if (((previousValue != value) 
							|| (this._tbGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGame.Entity = null;
						previousValue.tbGameScores.Remove(this);
					}
					this._tbGame.Entity = value;
					if ((value != null))
					{
						value.tbGameScores.Add(this);
						this._iGame = value.Id;
					}
					else
					{
						this._iGame = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbGame");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbGameScore", Storage="_tbUser", ThisKey="iUser", OtherKey="Id", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbGameScores.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbGameScores.Add(this);
						this._iUser = value.Id;
					}
					else
					{
						this._iUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbParameter_tbGameScore", Storage="_tbParameter", ThisKey="iParameters", OtherKey="Id", IsForeignKey=true)]
		public tbParameter tbParameter
		{
			get
			{
				return this._tbParameter.Entity;
			}
			set
			{
				tbParameter previousValue = this._tbParameter.Entity;
				if (((previousValue != value) 
							|| (this._tbParameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbParameter.Entity = null;
						previousValue.tbGameScores.Remove(this);
					}
					this._tbParameter.Entity = value;
					if ((value != null))
					{
						value.tbGameScores.Add(this);
						this._iParameters = value.Id;
					}
					else
					{
						this._iParameters = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbParameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGameTheme")]
	public partial class tbGameTheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iGame;
		
		private int _iTheme;
		
		private EntityRef<tbGame> _tbGame;
		
		private EntityRef<tbTheme> _tbTheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniGameChanging(int value);
    partial void OniGameChanged();
    partial void OniThemeChanging(int value);
    partial void OniThemeChanged();
    #endregion
		
		public tbGameTheme()
		{
			this._tbGame = default(EntityRef<tbGame>);
			this._tbTheme = default(EntityRef<tbTheme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					if (this._tbGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGameChanging(value);
					this.SendPropertyChanging();
					this._iGame = value;
					this.SendPropertyChanged("iGame");
					this.OniGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTheme", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iTheme
		{
			get
			{
				return this._iTheme;
			}
			set
			{
				if ((this._iTheme != value))
				{
					if (this._tbTheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniThemeChanging(value);
					this.SendPropertyChanging();
					this._iTheme = value;
					this.SendPropertyChanged("iTheme");
					this.OniThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbGameTheme", Storage="_tbGame", ThisKey="iGame", OtherKey="Id", IsForeignKey=true)]
		public tbGame tbGame
		{
			get
			{
				return this._tbGame.Entity;
			}
			set
			{
				tbGame previousValue = this._tbGame.Entity;
				if (((previousValue != value) 
							|| (this._tbGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGame.Entity = null;
						previousValue.tbGameThemes.Remove(this);
					}
					this._tbGame.Entity = value;
					if ((value != null))
					{
						value.tbGameThemes.Add(this);
						this._iGame = value.Id;
					}
					else
					{
						this._iGame = default(int);
					}
					this.SendPropertyChanged("tbGame");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTheme_tbGameTheme", Storage="_tbTheme", ThisKey="iTheme", OtherKey="Id", IsForeignKey=true)]
		public tbTheme tbTheme
		{
			get
			{
				return this._tbTheme.Entity;
			}
			set
			{
				tbTheme previousValue = this._tbTheme.Entity;
				if (((previousValue != value) 
							|| (this._tbTheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbTheme.Entity = null;
						previousValue.tbGameThemes.Remove(this);
					}
					this._tbTheme.Entity = value;
					if ((value != null))
					{
						value.tbGameThemes.Add(this);
						this._iTheme = value.Id;
					}
					else
					{
						this._iTheme = default(int);
					}
					this.SendPropertyChanged("tbTheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGenre")]
	public partial class tbGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sName;
		
		private EntitySet<tbGameGenre> _tbGameGenres;
		
		private EntitySet<tbPreferenceGenre> _tbPreferenceGenres;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    #endregion
		
		public tbGenre()
		{
			this._tbGameGenres = new EntitySet<tbGameGenre>(new Action<tbGameGenre>(this.attach_tbGameGenres), new Action<tbGameGenre>(this.detach_tbGameGenres));
			this._tbPreferenceGenres = new EntitySet<tbPreferenceGenre>(new Action<tbPreferenceGenre>(this.attach_tbPreferenceGenres), new Action<tbPreferenceGenre>(this.detach_tbPreferenceGenres));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGenre_tbGameGenre", Storage="_tbGameGenres", ThisKey="Id", OtherKey="iGenre")]
		public EntitySet<tbGameGenre> tbGameGenres
		{
			get
			{
				return this._tbGameGenres;
			}
			set
			{
				this._tbGameGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGenre_tbPreferenceGenre", Storage="_tbPreferenceGenres", ThisKey="Id", OtherKey="iGenre")]
		public EntitySet<tbPreferenceGenre> tbPreferenceGenres
		{
			get
			{
				return this._tbPreferenceGenres;
			}
			set
			{
				this._tbPreferenceGenres.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGameGenres(tbGameGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbGenre = this;
		}
		
		private void detach_tbGameGenres(tbGameGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbGenre = null;
		}
		
		private void attach_tbPreferenceGenres(tbPreferenceGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbGenre = this;
		}
		
		private void detach_tbPreferenceGenres(tbPreferenceGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbGenre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGraphicStyle")]
	public partial class tbGraphicStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sName;
		
		private EntitySet<tbGameGraphicStyle> _tbGameGraphicStyles;
		
		private EntitySet<tbPreferenceGraphicStyle> _tbPreferenceGraphicStyles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    #endregion
		
		public tbGraphicStyle()
		{
			this._tbGameGraphicStyles = new EntitySet<tbGameGraphicStyle>(new Action<tbGameGraphicStyle>(this.attach_tbGameGraphicStyles), new Action<tbGameGraphicStyle>(this.detach_tbGameGraphicStyles));
			this._tbPreferenceGraphicStyles = new EntitySet<tbPreferenceGraphicStyle>(new Action<tbPreferenceGraphicStyle>(this.attach_tbPreferenceGraphicStyles), new Action<tbPreferenceGraphicStyle>(this.detach_tbPreferenceGraphicStyles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGraphicStyle_tbGameGraphicStyle", Storage="_tbGameGraphicStyles", ThisKey="Id", OtherKey="iGraphicStyle")]
		public EntitySet<tbGameGraphicStyle> tbGameGraphicStyles
		{
			get
			{
				return this._tbGameGraphicStyles;
			}
			set
			{
				this._tbGameGraphicStyles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGraphicStyle_tbPreferenceGraphicStyle", Storage="_tbPreferenceGraphicStyles", ThisKey="Id", OtherKey="iGraphicStyle")]
		public EntitySet<tbPreferenceGraphicStyle> tbPreferenceGraphicStyles
		{
			get
			{
				return this._tbPreferenceGraphicStyles;
			}
			set
			{
				this._tbPreferenceGraphicStyles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGameGraphicStyles(tbGameGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbGraphicStyle = this;
		}
		
		private void detach_tbGameGraphicStyles(tbGameGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbGraphicStyle = null;
		}
		
		private void attach_tbPreferenceGraphicStyles(tbPreferenceGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbGraphicStyle = this;
		}
		
		private void detach_tbPreferenceGraphicStyles(tbPreferenceGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbGraphicStyle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbParameters")]
	public partial class tbParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _iStrategy;
		
		private System.Nullable<int> _iMechanics;
		
		private System.Nullable<int> _iEase;
		
		private System.Nullable<int> _iAtmosphere;
		
		private System.Nullable<int> _iLongevity;
		
		private EntitySet<tbGameScore> _tbGameScores;
		
		private EntitySet<tbPreference> _tbPreferences;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OniStrategyChanging(System.Nullable<int> value);
    partial void OniStrategyChanged();
    partial void OniMechanicsChanging(System.Nullable<int> value);
    partial void OniMechanicsChanged();
    partial void OniEaseChanging(System.Nullable<int> value);
    partial void OniEaseChanged();
    partial void OniAtmosphereChanging(System.Nullable<int> value);
    partial void OniAtmosphereChanged();
    partial void OniLongevityChanging(System.Nullable<int> value);
    partial void OniLongevityChanged();
    #endregion
		
		public tbParameter()
		{
			this._tbGameScores = new EntitySet<tbGameScore>(new Action<tbGameScore>(this.attach_tbGameScores), new Action<tbGameScore>(this.detach_tbGameScores));
			this._tbPreferences = new EntitySet<tbPreference>(new Action<tbPreference>(this.attach_tbPreferences), new Action<tbPreference>(this.detach_tbPreferences));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iStrategy", DbType="Int")]
		public System.Nullable<int> iStrategy
		{
			get
			{
				return this._iStrategy;
			}
			set
			{
				if ((this._iStrategy != value))
				{
					this.OniStrategyChanging(value);
					this.SendPropertyChanging();
					this._iStrategy = value;
					this.SendPropertyChanged("iStrategy");
					this.OniStrategyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMechanics", DbType="Int")]
		public System.Nullable<int> iMechanics
		{
			get
			{
				return this._iMechanics;
			}
			set
			{
				if ((this._iMechanics != value))
				{
					this.OniMechanicsChanging(value);
					this.SendPropertyChanging();
					this._iMechanics = value;
					this.SendPropertyChanged("iMechanics");
					this.OniMechanicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEase", DbType="Int")]
		public System.Nullable<int> iEase
		{
			get
			{
				return this._iEase;
			}
			set
			{
				if ((this._iEase != value))
				{
					this.OniEaseChanging(value);
					this.SendPropertyChanging();
					this._iEase = value;
					this.SendPropertyChanged("iEase");
					this.OniEaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAtmosphere", DbType="Int")]
		public System.Nullable<int> iAtmosphere
		{
			get
			{
				return this._iAtmosphere;
			}
			set
			{
				if ((this._iAtmosphere != value))
				{
					this.OniAtmosphereChanging(value);
					this.SendPropertyChanging();
					this._iAtmosphere = value;
					this.SendPropertyChanged("iAtmosphere");
					this.OniAtmosphereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLongevity", DbType="Int")]
		public System.Nullable<int> iLongevity
		{
			get
			{
				return this._iLongevity;
			}
			set
			{
				if ((this._iLongevity != value))
				{
					this.OniLongevityChanging(value);
					this.SendPropertyChanging();
					this._iLongevity = value;
					this.SendPropertyChanged("iLongevity");
					this.OniLongevityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbParameter_tbGameScore", Storage="_tbGameScores", ThisKey="Id", OtherKey="iParameters")]
		public EntitySet<tbGameScore> tbGameScores
		{
			get
			{
				return this._tbGameScores;
			}
			set
			{
				this._tbGameScores.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbParameter_tbPreference", Storage="_tbPreferences", ThisKey="Id", OtherKey="iParameters")]
		public EntitySet<tbPreference> tbPreferences
		{
			get
			{
				return this._tbPreferences;
			}
			set
			{
				this._tbPreferences.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGameScores(tbGameScore entity)
		{
			this.SendPropertyChanging();
			entity.tbParameter = this;
		}
		
		private void detach_tbGameScores(tbGameScore entity)
		{
			this.SendPropertyChanging();
			entity.tbParameter = null;
		}
		
		private void attach_tbPreferences(tbPreference entity)
		{
			this.SendPropertyChanging();
			entity.tbParameter = this;
		}
		
		private void detach_tbPreferences(tbPreference entity)
		{
			this.SendPropertyChanging();
			entity.tbParameter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPlatform")]
	public partial class tbPlatform : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sName;
		
		private EntitySet<tbGamePlatform> _tbGamePlatforms;
		
		private EntitySet<tbPreferencePlatform> _tbPreferencePlatforms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    #endregion
		
		public tbPlatform()
		{
			this._tbGamePlatforms = new EntitySet<tbGamePlatform>(new Action<tbGamePlatform>(this.attach_tbGamePlatforms), new Action<tbGamePlatform>(this.detach_tbGamePlatforms));
			this._tbPreferencePlatforms = new EntitySet<tbPreferencePlatform>(new Action<tbPreferencePlatform>(this.attach_tbPreferencePlatforms), new Action<tbPreferencePlatform>(this.detach_tbPreferencePlatforms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPlatform_tbGamePlatform", Storage="_tbGamePlatforms", ThisKey="Id", OtherKey="iPlatform")]
		public EntitySet<tbGamePlatform> tbGamePlatforms
		{
			get
			{
				return this._tbGamePlatforms;
			}
			set
			{
				this._tbGamePlatforms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPlatform_tbPreferencePlatform", Storage="_tbPreferencePlatforms", ThisKey="Id", OtherKey="iPlatform")]
		public EntitySet<tbPreferencePlatform> tbPreferencePlatforms
		{
			get
			{
				return this._tbPreferencePlatforms;
			}
			set
			{
				this._tbPreferencePlatforms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGamePlatforms(tbGamePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbPlatform = this;
		}
		
		private void detach_tbGamePlatforms(tbGamePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbPlatform = null;
		}
		
		private void attach_tbPreferencePlatforms(tbPreferencePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbPlatform = this;
		}
		
		private void detach_tbPreferencePlatforms(tbPreferencePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbPlatform = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPreference")]
	public partial class tbPreference : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _iParameters;
		
		private EntitySet<tbPreferenceGenre> _tbPreferenceGenres;
		
		private EntitySet<tbPreferenceGraphicStyle> _tbPreferenceGraphicStyles;
		
		private EntitySet<tbPreferencePlatform> _tbPreferencePlatforms;
		
		private EntitySet<tbPreferenceTheme> _tbPreferenceThemes;
		
		private EntitySet<tbTemplate> _tbTemplates;
		
		private EntityRef<tbParameter> _tbParameter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OniParametersChanging(System.Nullable<int> value);
    partial void OniParametersChanged();
    #endregion
		
		public tbPreference()
		{
			this._tbPreferenceGenres = new EntitySet<tbPreferenceGenre>(new Action<tbPreferenceGenre>(this.attach_tbPreferenceGenres), new Action<tbPreferenceGenre>(this.detach_tbPreferenceGenres));
			this._tbPreferenceGraphicStyles = new EntitySet<tbPreferenceGraphicStyle>(new Action<tbPreferenceGraphicStyle>(this.attach_tbPreferenceGraphicStyles), new Action<tbPreferenceGraphicStyle>(this.detach_tbPreferenceGraphicStyles));
			this._tbPreferencePlatforms = new EntitySet<tbPreferencePlatform>(new Action<tbPreferencePlatform>(this.attach_tbPreferencePlatforms), new Action<tbPreferencePlatform>(this.detach_tbPreferencePlatforms));
			this._tbPreferenceThemes = new EntitySet<tbPreferenceTheme>(new Action<tbPreferenceTheme>(this.attach_tbPreferenceThemes), new Action<tbPreferenceTheme>(this.detach_tbPreferenceThemes));
			this._tbTemplates = new EntitySet<tbTemplate>(new Action<tbTemplate>(this.attach_tbTemplates), new Action<tbTemplate>(this.detach_tbTemplates));
			this._tbParameter = default(EntityRef<tbParameter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iParameters", DbType="Int")]
		public System.Nullable<int> iParameters
		{
			get
			{
				return this._iParameters;
			}
			set
			{
				if ((this._iParameters != value))
				{
					if (this._tbParameter.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniParametersChanging(value);
					this.SendPropertyChanging();
					this._iParameters = value;
					this.SendPropertyChanged("iParameters");
					this.OniParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferenceGenre", Storage="_tbPreferenceGenres", ThisKey="Id", OtherKey="iPreference")]
		public EntitySet<tbPreferenceGenre> tbPreferenceGenres
		{
			get
			{
				return this._tbPreferenceGenres;
			}
			set
			{
				this._tbPreferenceGenres.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferenceGraphicStyle", Storage="_tbPreferenceGraphicStyles", ThisKey="Id", OtherKey="iPreference")]
		public EntitySet<tbPreferenceGraphicStyle> tbPreferenceGraphicStyles
		{
			get
			{
				return this._tbPreferenceGraphicStyles;
			}
			set
			{
				this._tbPreferenceGraphicStyles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferencePlatform", Storage="_tbPreferencePlatforms", ThisKey="Id", OtherKey="iPreference")]
		public EntitySet<tbPreferencePlatform> tbPreferencePlatforms
		{
			get
			{
				return this._tbPreferencePlatforms;
			}
			set
			{
				this._tbPreferencePlatforms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferenceTheme", Storage="_tbPreferenceThemes", ThisKey="Id", OtherKey="iPreference")]
		public EntitySet<tbPreferenceTheme> tbPreferenceThemes
		{
			get
			{
				return this._tbPreferenceThemes;
			}
			set
			{
				this._tbPreferenceThemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbTemplate", Storage="_tbTemplates", ThisKey="Id", OtherKey="iPreference")]
		public EntitySet<tbTemplate> tbTemplates
		{
			get
			{
				return this._tbTemplates;
			}
			set
			{
				this._tbTemplates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbParameter_tbPreference", Storage="_tbParameter", ThisKey="iParameters", OtherKey="Id", IsForeignKey=true)]
		public tbParameter tbParameter
		{
			get
			{
				return this._tbParameter.Entity;
			}
			set
			{
				tbParameter previousValue = this._tbParameter.Entity;
				if (((previousValue != value) 
							|| (this._tbParameter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbParameter.Entity = null;
						previousValue.tbPreferences.Remove(this);
					}
					this._tbParameter.Entity = value;
					if ((value != null))
					{
						value.tbPreferences.Add(this);
						this._iParameters = value.Id;
					}
					else
					{
						this._iParameters = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbParameter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbPreferenceGenres(tbPreferenceGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = this;
		}
		
		private void detach_tbPreferenceGenres(tbPreferenceGenre entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = null;
		}
		
		private void attach_tbPreferenceGraphicStyles(tbPreferenceGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = this;
		}
		
		private void detach_tbPreferenceGraphicStyles(tbPreferenceGraphicStyle entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = null;
		}
		
		private void attach_tbPreferencePlatforms(tbPreferencePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = this;
		}
		
		private void detach_tbPreferencePlatforms(tbPreferencePlatform entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = null;
		}
		
		private void attach_tbPreferenceThemes(tbPreferenceTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = this;
		}
		
		private void detach_tbPreferenceThemes(tbPreferenceTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = null;
		}
		
		private void attach_tbTemplates(tbTemplate entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = this;
		}
		
		private void detach_tbTemplates(tbTemplate entity)
		{
			this.SendPropertyChanging();
			entity.tbPreference = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPreferenceGenre")]
	public partial class tbPreferenceGenre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iPreference;
		
		private int _iGenre;
		
		private EntityRef<tbGenre> _tbGenre;
		
		private EntityRef<tbPreference> _tbPreference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniPreferenceChanging(int value);
    partial void OniPreferenceChanged();
    partial void OniGenreChanging(int value);
    partial void OniGenreChanged();
    #endregion
		
		public tbPreferenceGenre()
		{
			this._tbGenre = default(EntityRef<tbGenre>);
			this._tbPreference = default(EntityRef<tbPreference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPreference", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iPreference
		{
			get
			{
				return this._iPreference;
			}
			set
			{
				if ((this._iPreference != value))
				{
					if (this._tbPreference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPreferenceChanging(value);
					this.SendPropertyChanging();
					this._iPreference = value;
					this.SendPropertyChanged("iPreference");
					this.OniPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGenre", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGenre
		{
			get
			{
				return this._iGenre;
			}
			set
			{
				if ((this._iGenre != value))
				{
					if (this._tbGenre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGenreChanging(value);
					this.SendPropertyChanging();
					this._iGenre = value;
					this.SendPropertyChanged("iGenre");
					this.OniGenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGenre_tbPreferenceGenre", Storage="_tbGenre", ThisKey="iGenre", OtherKey="Id", IsForeignKey=true)]
		public tbGenre tbGenre
		{
			get
			{
				return this._tbGenre.Entity;
			}
			set
			{
				tbGenre previousValue = this._tbGenre.Entity;
				if (((previousValue != value) 
							|| (this._tbGenre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGenre.Entity = null;
						previousValue.tbPreferenceGenres.Remove(this);
					}
					this._tbGenre.Entity = value;
					if ((value != null))
					{
						value.tbPreferenceGenres.Add(this);
						this._iGenre = value.Id;
					}
					else
					{
						this._iGenre = default(int);
					}
					this.SendPropertyChanged("tbGenre");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferenceGenre", Storage="_tbPreference", ThisKey="iPreference", OtherKey="Id", IsForeignKey=true)]
		public tbPreference tbPreference
		{
			get
			{
				return this._tbPreference.Entity;
			}
			set
			{
				tbPreference previousValue = this._tbPreference.Entity;
				if (((previousValue != value) 
							|| (this._tbPreference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPreference.Entity = null;
						previousValue.tbPreferenceGenres.Remove(this);
					}
					this._tbPreference.Entity = value;
					if ((value != null))
					{
						value.tbPreferenceGenres.Add(this);
						this._iPreference = value.Id;
					}
					else
					{
						this._iPreference = default(int);
					}
					this.SendPropertyChanged("tbPreference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPreferenceGraphicStyle")]
	public partial class tbPreferenceGraphicStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iPreference;
		
		private int _iGraphicStyle;
		
		private EntityRef<tbGraphicStyle> _tbGraphicStyle;
		
		private EntityRef<tbPreference> _tbPreference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniPreferenceChanging(int value);
    partial void OniPreferenceChanged();
    partial void OniGraphicStyleChanging(int value);
    partial void OniGraphicStyleChanged();
    #endregion
		
		public tbPreferenceGraphicStyle()
		{
			this._tbGraphicStyle = default(EntityRef<tbGraphicStyle>);
			this._tbPreference = default(EntityRef<tbPreference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPreference", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iPreference
		{
			get
			{
				return this._iPreference;
			}
			set
			{
				if ((this._iPreference != value))
				{
					if (this._tbPreference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPreferenceChanging(value);
					this.SendPropertyChanging();
					this._iPreference = value;
					this.SendPropertyChanged("iPreference");
					this.OniPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGraphicStyle", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iGraphicStyle
		{
			get
			{
				return this._iGraphicStyle;
			}
			set
			{
				if ((this._iGraphicStyle != value))
				{
					if (this._tbGraphicStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGraphicStyleChanging(value);
					this.SendPropertyChanging();
					this._iGraphicStyle = value;
					this.SendPropertyChanged("iGraphicStyle");
					this.OniGraphicStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGraphicStyle_tbPreferenceGraphicStyle", Storage="_tbGraphicStyle", ThisKey="iGraphicStyle", OtherKey="Id", IsForeignKey=true)]
		public tbGraphicStyle tbGraphicStyle
		{
			get
			{
				return this._tbGraphicStyle.Entity;
			}
			set
			{
				tbGraphicStyle previousValue = this._tbGraphicStyle.Entity;
				if (((previousValue != value) 
							|| (this._tbGraphicStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGraphicStyle.Entity = null;
						previousValue.tbPreferenceGraphicStyles.Remove(this);
					}
					this._tbGraphicStyle.Entity = value;
					if ((value != null))
					{
						value.tbPreferenceGraphicStyles.Add(this);
						this._iGraphicStyle = value.Id;
					}
					else
					{
						this._iGraphicStyle = default(int);
					}
					this.SendPropertyChanged("tbGraphicStyle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferenceGraphicStyle", Storage="_tbPreference", ThisKey="iPreference", OtherKey="Id", IsForeignKey=true)]
		public tbPreference tbPreference
		{
			get
			{
				return this._tbPreference.Entity;
			}
			set
			{
				tbPreference previousValue = this._tbPreference.Entity;
				if (((previousValue != value) 
							|| (this._tbPreference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPreference.Entity = null;
						previousValue.tbPreferenceGraphicStyles.Remove(this);
					}
					this._tbPreference.Entity = value;
					if ((value != null))
					{
						value.tbPreferenceGraphicStyles.Add(this);
						this._iPreference = value.Id;
					}
					else
					{
						this._iPreference = default(int);
					}
					this.SendPropertyChanged("tbPreference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPreferencePlatform")]
	public partial class tbPreferencePlatform : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iPreference;
		
		private int _iPlatform;
		
		private EntityRef<tbPlatform> _tbPlatform;
		
		private EntityRef<tbPreference> _tbPreference;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniPreferenceChanging(int value);
    partial void OniPreferenceChanged();
    partial void OniPlatformChanging(int value);
    partial void OniPlatformChanged();
    #endregion
		
		public tbPreferencePlatform()
		{
			this._tbPlatform = default(EntityRef<tbPlatform>);
			this._tbPreference = default(EntityRef<tbPreference>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPreference", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iPreference
		{
			get
			{
				return this._iPreference;
			}
			set
			{
				if ((this._iPreference != value))
				{
					if (this._tbPreference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPreferenceChanging(value);
					this.SendPropertyChanging();
					this._iPreference = value;
					this.SendPropertyChanged("iPreference");
					this.OniPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPlatform", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iPlatform
		{
			get
			{
				return this._iPlatform;
			}
			set
			{
				if ((this._iPlatform != value))
				{
					if (this._tbPlatform.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPlatformChanging(value);
					this.SendPropertyChanging();
					this._iPlatform = value;
					this.SendPropertyChanged("iPlatform");
					this.OniPlatformChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPlatform_tbPreferencePlatform", Storage="_tbPlatform", ThisKey="iPlatform", OtherKey="Id", IsForeignKey=true)]
		public tbPlatform tbPlatform
		{
			get
			{
				return this._tbPlatform.Entity;
			}
			set
			{
				tbPlatform previousValue = this._tbPlatform.Entity;
				if (((previousValue != value) 
							|| (this._tbPlatform.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPlatform.Entity = null;
						previousValue.tbPreferencePlatforms.Remove(this);
					}
					this._tbPlatform.Entity = value;
					if ((value != null))
					{
						value.tbPreferencePlatforms.Add(this);
						this._iPlatform = value.Id;
					}
					else
					{
						this._iPlatform = default(int);
					}
					this.SendPropertyChanged("tbPlatform");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferencePlatform", Storage="_tbPreference", ThisKey="iPreference", OtherKey="Id", IsForeignKey=true)]
		public tbPreference tbPreference
		{
			get
			{
				return this._tbPreference.Entity;
			}
			set
			{
				tbPreference previousValue = this._tbPreference.Entity;
				if (((previousValue != value) 
							|| (this._tbPreference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPreference.Entity = null;
						previousValue.tbPreferencePlatforms.Remove(this);
					}
					this._tbPreference.Entity = value;
					if ((value != null))
					{
						value.tbPreferencePlatforms.Add(this);
						this._iPreference = value.Id;
					}
					else
					{
						this._iPreference = default(int);
					}
					this.SendPropertyChanged("tbPreference");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPreferenceTheme")]
	public partial class tbPreferenceTheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iPreference;
		
		private int _iTheme;
		
		private EntityRef<tbPreference> _tbPreference;
		
		private EntityRef<tbTheme> _tbTheme;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniPreferenceChanging(int value);
    partial void OniPreferenceChanged();
    partial void OniThemeChanging(int value);
    partial void OniThemeChanged();
    #endregion
		
		public tbPreferenceTheme()
		{
			this._tbPreference = default(EntityRef<tbPreference>);
			this._tbTheme = default(EntityRef<tbTheme>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPreference", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iPreference
		{
			get
			{
				return this._iPreference;
			}
			set
			{
				if ((this._iPreference != value))
				{
					if (this._tbPreference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPreferenceChanging(value);
					this.SendPropertyChanging();
					this._iPreference = value;
					this.SendPropertyChanged("iPreference");
					this.OniPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTheme", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int iTheme
		{
			get
			{
				return this._iTheme;
			}
			set
			{
				if ((this._iTheme != value))
				{
					if (this._tbTheme.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniThemeChanging(value);
					this.SendPropertyChanging();
					this._iTheme = value;
					this.SendPropertyChanged("iTheme");
					this.OniThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbPreferenceTheme", Storage="_tbPreference", ThisKey="iPreference", OtherKey="Id", IsForeignKey=true)]
		public tbPreference tbPreference
		{
			get
			{
				return this._tbPreference.Entity;
			}
			set
			{
				tbPreference previousValue = this._tbPreference.Entity;
				if (((previousValue != value) 
							|| (this._tbPreference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPreference.Entity = null;
						previousValue.tbPreferenceThemes.Remove(this);
					}
					this._tbPreference.Entity = value;
					if ((value != null))
					{
						value.tbPreferenceThemes.Add(this);
						this._iPreference = value.Id;
					}
					else
					{
						this._iPreference = default(int);
					}
					this.SendPropertyChanged("tbPreference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTheme_tbPreferenceTheme", Storage="_tbTheme", ThisKey="iTheme", OtherKey="Id", IsForeignKey=true)]
		public tbTheme tbTheme
		{
			get
			{
				return this._tbTheme.Entity;
			}
			set
			{
				tbTheme previousValue = this._tbTheme.Entity;
				if (((previousValue != value) 
							|| (this._tbTheme.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbTheme.Entity = null;
						previousValue.tbPreferenceThemes.Remove(this);
					}
					this._tbTheme.Entity = value;
					if ((value != null))
					{
						value.tbPreferenceThemes.Add(this);
						this._iTheme = value.Id;
					}
					else
					{
						this._iTheme = default(int);
					}
					this.SendPropertyChanged("tbTheme");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTemplate")]
	public partial class tbTemplate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sName;
		
		private System.Nullable<int> _iPreference;
		
		private System.Nullable<int> _iUser;
		
		private EntityRef<tbPreference> _tbPreference;
		
		private EntityRef<tbUser> _tbUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    partial void OniPreferenceChanging(System.Nullable<int> value);
    partial void OniPreferenceChanged();
    partial void OniUserChanging(System.Nullable<int> value);
    partial void OniUserChanged();
    #endregion
		
		public tbTemplate()
		{
			this._tbPreference = default(EntityRef<tbPreference>);
			this._tbUser = default(EntityRef<tbUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPreference", DbType="Int")]
		public System.Nullable<int> iPreference
		{
			get
			{
				return this._iPreference;
			}
			set
			{
				if ((this._iPreference != value))
				{
					if (this._tbPreference.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniPreferenceChanging(value);
					this.SendPropertyChanging();
					this._iPreference = value;
					this.SendPropertyChanged("iPreference");
					this.OniPreferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iUser", DbType="Int")]
		public System.Nullable<int> iUser
		{
			get
			{
				return this._iUser;
			}
			set
			{
				if ((this._iUser != value))
				{
					if (this._tbUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniUserChanging(value);
					this.SendPropertyChanging();
					this._iUser = value;
					this.SendPropertyChanged("iUser");
					this.OniUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbPreference_tbTemplate", Storage="_tbPreference", ThisKey="iPreference", OtherKey="Id", IsForeignKey=true)]
		public tbPreference tbPreference
		{
			get
			{
				return this._tbPreference.Entity;
			}
			set
			{
				tbPreference previousValue = this._tbPreference.Entity;
				if (((previousValue != value) 
							|| (this._tbPreference.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbPreference.Entity = null;
						previousValue.tbTemplates.Remove(this);
					}
					this._tbPreference.Entity = value;
					if ((value != null))
					{
						value.tbTemplates.Add(this);
						this._iPreference = value.Id;
					}
					else
					{
						this._iPreference = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbPreference");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTemplate", Storage="_tbUser", ThisKey="iUser", OtherKey="Id", IsForeignKey=true)]
		public tbUser tbUser
		{
			get
			{
				return this._tbUser.Entity;
			}
			set
			{
				tbUser previousValue = this._tbUser.Entity;
				if (((previousValue != value) 
							|| (this._tbUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbUser.Entity = null;
						previousValue.tbTemplates.Remove(this);
					}
					this._tbUser.Entity = value;
					if ((value != null))
					{
						value.tbTemplates.Add(this);
						this._iUser = value.Id;
					}
					else
					{
						this._iUser = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTheme")]
	public partial class tbTheme : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sName;
		
		private EntitySet<tbGameTheme> _tbGameThemes;
		
		private EntitySet<tbPreferenceTheme> _tbPreferenceThemes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsNameChanging(string value);
    partial void OnsNameChanged();
    #endregion
		
		public tbTheme()
		{
			this._tbGameThemes = new EntitySet<tbGameTheme>(new Action<tbGameTheme>(this.attach_tbGameThemes), new Action<tbGameTheme>(this.detach_tbGameThemes));
			this._tbPreferenceThemes = new EntitySet<tbPreferenceTheme>(new Action<tbPreferenceTheme>(this.attach_tbPreferenceThemes), new Action<tbPreferenceTheme>(this.detach_tbPreferenceThemes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this.OnsNameChanging(value);
					this.SendPropertyChanging();
					this._sName = value;
					this.SendPropertyChanged("sName");
					this.OnsNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTheme_tbGameTheme", Storage="_tbGameThemes", ThisKey="Id", OtherKey="iTheme")]
		public EntitySet<tbGameTheme> tbGameThemes
		{
			get
			{
				return this._tbGameThemes;
			}
			set
			{
				this._tbGameThemes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTheme_tbPreferenceTheme", Storage="_tbPreferenceThemes", ThisKey="Id", OtherKey="iTheme")]
		public EntitySet<tbPreferenceTheme> tbPreferenceThemes
		{
			get
			{
				return this._tbPreferenceThemes;
			}
			set
			{
				this._tbPreferenceThemes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbGameThemes(tbGameTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbTheme = this;
		}
		
		private void detach_tbGameThemes(tbGameTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbTheme = null;
		}
		
		private void attach_tbPreferenceThemes(tbPreferenceTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbTheme = this;
		}
		
		private void detach_tbPreferenceThemes(tbPreferenceTheme entity)
		{
			this.SendPropertyChanging();
			entity.tbTheme = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGenre")]
	public partial class vwGenre
	{
		
		private int _iGame;
		
		private int _iGenre;
		
		private string _sName;
		
		public vwGenre()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL")]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					this._iGame = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGenre", DbType="Int NOT NULL")]
		public int iGenre
		{
			get
			{
				return this._iGenre;
			}
			set
			{
				if ((this._iGenre != value))
				{
					this._iGenre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwTheme")]
	public partial class vwTheme
	{
		
		private int _iGame;
		
		private int _iTheme;
		
		private string _sName;
		
		public vwTheme()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL")]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					this._iGame = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iTheme", DbType="Int NOT NULL")]
		public int iTheme
		{
			get
			{
				return this._iTheme;
			}
			set
			{
				if ((this._iTheme != value))
				{
					this._iTheme = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwGraphicStyle")]
	public partial class vwGraphicStyle
	{
		
		private int _iGame;
		
		private int _iGraphicStyle;
		
		private string _sName;
		
		public vwGraphicStyle()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL")]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					this._iGame = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGraphicStyle", DbType="Int NOT NULL")]
		public int iGraphicStyle
		{
			get
			{
				return this._iGraphicStyle;
			}
			set
			{
				if ((this._iGraphicStyle != value))
				{
					this._iGraphicStyle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwPlatform")]
	public partial class vwPlatform
	{
		
		private int _iGame;
		
		private int _iPlatform;
		
		private string _sName;
		
		public vwPlatform()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int NOT NULL")]
		public int iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					this._iGame = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iPlatform", DbType="Int NOT NULL")]
		public int iPlatform
		{
			get
			{
				return this._iPlatform;
			}
			set
			{
				if ((this._iPlatform != value))
				{
					this._iPlatform = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sName", DbType="NVarChar(50)")]
		public string sName
		{
			get
			{
				return this._sName;
			}
			set
			{
				if ((this._sName != value))
				{
					this._sName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vwScore")]
	public partial class vwScore
	{
		
		private System.Nullable<int> _iGame;
		
		private System.Nullable<int> _iAtmosphere;
		
		private System.Nullable<int> _iEase;
		
		private System.Nullable<int> _iLongevity;
		
		private System.Nullable<int> _iMechanics;
		
		private System.Nullable<int> _iStrategy;
		
		public vwScore()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int")]
		public System.Nullable<int> iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					this._iGame = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iAtmosphere", DbType="Int")]
		public System.Nullable<int> iAtmosphere
		{
			get
			{
				return this._iAtmosphere;
			}
			set
			{
				if ((this._iAtmosphere != value))
				{
					this._iAtmosphere = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iEase", DbType="Int")]
		public System.Nullable<int> iEase
		{
			get
			{
				return this._iEase;
			}
			set
			{
				if ((this._iEase != value))
				{
					this._iEase = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iLongevity", DbType="Int")]
		public System.Nullable<int> iLongevity
		{
			get
			{
				return this._iLongevity;
			}
			set
			{
				if ((this._iLongevity != value))
				{
					this._iLongevity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iMechanics", DbType="Int")]
		public System.Nullable<int> iMechanics
		{
			get
			{
				return this._iMechanics;
			}
			set
			{
				if ((this._iMechanics != value))
				{
					this._iMechanics = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iStrategy", DbType="Int")]
		public System.Nullable<int> iStrategy
		{
			get
			{
				return this._iStrategy;
			}
			set
			{
				if ((this._iStrategy != value))
				{
					this._iStrategy = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbImage")]
	public partial class tbImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _sThumbnail;
		
		private string _sCover;
		
		private System.Nullable<int> _iGame;
		
		private EntityRef<tbGame> _tbGame;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnsThumbnailChanging(string value);
    partial void OnsThumbnailChanged();
    partial void OnsCoverChanging(string value);
    partial void OnsCoverChanged();
    partial void OniGameChanging(System.Nullable<int> value);
    partial void OniGameChanged();
    #endregion
		
		public tbImage()
		{
			this._tbGame = default(EntityRef<tbGame>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sThumbnail", DbType="NVarChar(300)")]
		public string sThumbnail
		{
			get
			{
				return this._sThumbnail;
			}
			set
			{
				if ((this._sThumbnail != value))
				{
					this.OnsThumbnailChanging(value);
					this.SendPropertyChanging();
					this._sThumbnail = value;
					this.SendPropertyChanged("sThumbnail");
					this.OnsThumbnailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sCover", DbType="NVarChar(300)")]
		public string sCover
		{
			get
			{
				return this._sCover;
			}
			set
			{
				if ((this._sCover != value))
				{
					this.OnsCoverChanging(value);
					this.SendPropertyChanging();
					this._sCover = value;
					this.SendPropertyChanged("sCover");
					this.OnsCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iGame", DbType="Int")]
		public System.Nullable<int> iGame
		{
			get
			{
				return this._iGame;
			}
			set
			{
				if ((this._iGame != value))
				{
					if (this._tbGame.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OniGameChanging(value);
					this.SendPropertyChanging();
					this._iGame = value;
					this.SendPropertyChanged("iGame");
					this.OniGameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGame_tbImage", Storage="_tbGame", ThisKey="iGame", OtherKey="Id", IsForeignKey=true)]
		public tbGame tbGame
		{
			get
			{
				return this._tbGame.Entity;
			}
			set
			{
				tbGame previousValue = this._tbGame.Entity;
				if (((previousValue != value) 
							|| (this._tbGame.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbGame.Entity = null;
						previousValue.tbImages.Remove(this);
					}
					this._tbGame.Entity = value;
					if ((value != null))
					{
						value.tbImages.Add(this);
						this._iGame = value.Id;
					}
					else
					{
						this._iGame = default(Nullable<int>);
					}
					this.SendPropertyChanged("tbGame");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
